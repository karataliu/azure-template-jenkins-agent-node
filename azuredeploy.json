{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin user name for the vm"
      },
      "defaultValue": "easytemplate"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the vm"
      }
    }
  },
  "variables": {
    "prefix": "[tolower(resourceGroup().name)]",
    "storageAccount": "[concat(variables('prefix'),'sto')]",
    "vnet": "[concat(variables('prefix'),'vnet')]",
    "publicIp": "[concat(variables('prefix'),'publicip')]",
    "nic": "[concat(variables('prefix'),'nic')]",
    "vm": "[concat(variables('prefix'),'vm')]",
    "vmSize": "Standard_A1",
    "imageReference": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04.0-LTS",
      "version": "latest"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccount')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "192.168.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "192.168.0.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIp')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('vm')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('publicIp')]",
        "[variables('vnet')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIp'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnet'),'default')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nic')]",
        "[variables('storageAccount')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccount')), '2015-06-15').primaryEndpoints.blob,'vhds/',variables('vm'),'.vhd')]"
            },
            "name": "osdisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "imageReference": "[variables('imageReference')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nic')))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "endpoint": {
      "type": "string",
      "value": "[reference(variables('publicIp')).dnsSettings.fqdn]"
    }
  }
}